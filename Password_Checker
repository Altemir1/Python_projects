import hashlib
import requests
import sys

api_url = ""
# Function to hash the password using SHA1
def hash_password(password):
    sha1_hash = hashlib.sha1(password.encode()).hexdigest().upper()
    return sha1_hash

# Function to send a request to Have I Been Pwned API
def check_password_pwned_api(password_hash):
    global api_url

    api_url = f"https://api.pwnedpasswords.com/range/{password_hash[:5]}"
    response = requests.get(api_url)

    if response.status_code == 200:
        print("API request sent. Awaiting response...")
        return response.content
    else:
        print(f"Error: API request failed with status code {response.status_code}")
        return None

# Function to create a file with content from API response
def write_pwned_password(response_data):
    file = open("pwned_password.txt", "wb")
    file.write(response_data)
    file.close()

# Function to create a dictionary to easy identifying pwned passoword
def create_list_pwned_password():
    password_count = {}
    file = open("pwned_password.txt", "r")

    file_content = file.readlines()

    for line in file_content:

        list = line.split(":")

        password_count[list[0]] = list[1]

    return password_count

user_password = ""
cmd_argument = ""
# Loop for continuous prompt

while user_password != "exit":

    # Prompt the user for their password
    user_password = input("Enter your password (or 'exit' to quit): ")
    # Take arguments from
    args = sys.argv
    if len(args) == 2:
        cmd_argument = args[1]



    # Hash the password
    hashed_password = hash_password(user_password)

    # Send a request to the Have I Been Pwned API
    response_data = check_password_pwned_api(hashed_password)

    # Create a file with response content
    write_pwned_password(response_data)

    # Return dictionary to password_count variable
    password_count = create_list_pwned_password()
    if cmd_argument == "--show-hash":
        print(f"Your hashed password is: {hashed_password}")

    print("Checking...")

    if response_data:
        if hashed_password[5:] in password_count.keys():
            print(f"Your password has been pwned! The password \"{user_password}\" appears {(password_count[hashed_password[5:]])} times in data breaches.")
        else:
            print("Good news! Your password hasn't been pwned.")
    else:
        print("No response received from the API.")

print("Goodbye!")
